generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model ActivityRecord {
  title        String?
  year         Int?
  date         String?
  filename     String?
  place        String?
  id           Int     @id @default(autoincrement())
  activityType String?
  details      String?
}

model Content {
  id       Int      @id @default(autoincrement())
  title    String?
  content  String?
  images   String[]
  filename String?  @unique
  recordId Int
  Record   Record   @relation(fields: [recordId], references: [id])

  @@unique([recordId, filename])
}

model Member {
  id        String   @id
  nickname  String
  createdAt DateTime @default(now())
  major     String?
  profile   String?
  name      String?
  role      String?
  year      String
  src       String?
}

model Record {
  id               Int               @id @default(autoincrement())
  year             Int?
  place            String?
  date             String?
  activityType     String?
  details          String?
  Content          Content[]
  PostHikeContents PostHikeContent[] @relation("RecordToPostHikeContent")

  @@unique([year, place, activityType])
}

model RecordContent {
  year      Int?
  content   String?
  images    String[]
  createdAt DateTime @default(now())
  filename  String?
  id        Int      @id @default(autoincrement())
}

model User {
  id    String   @id @default(uuid())
  email String   @unique
  role  String[]
}

model PostHikeContent {
  id               Int      @id @default(autoincrement())
  equipmentPerson  String[]
  weatherPerson    String[]
  mealPerson       String[]
  sl               String?
  equipmentComment String?
  weatherComment   String?
  mealComment      String?
  slComemnt        String?
  recordId         Int
  clId             String
  Record           Record   @relation(fields: [recordId], references: [id], name: "RecordToPostHikeContent")

  @@unique([recordId])
}
